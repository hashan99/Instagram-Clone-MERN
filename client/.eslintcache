[{"F:\\mern_stack\\server\\client\\src\\index.js":"1","F:\\mern_stack\\server\\client\\src\\App.js":"2","F:\\mern_stack\\server\\client\\src\\reportWebVitals.js":"3","F:\\mern_stack\\server\\client\\src\\components\\Navbar.js":"4","F:\\mern_stack\\server\\client\\src\\components\\screens\\Home.js":"5","F:\\mern_stack\\server\\client\\src\\components\\screens\\Profile.js":"6","F:\\mern_stack\\server\\client\\src\\components\\screens\\Signup.js":"7","F:\\mern_stack\\server\\client\\src\\components\\screens\\Signin.js":"8","F:\\mern_stack\\server\\client\\src\\components\\screens\\CreatePost.js":"9","F:\\mern_stack\\server\\client\\src\\components\\screens\\UserProfile.js":"10","F:\\mern_stack\\server\\client\\src\\components\\screens\\FollowingUserPosts.js":"11","F:\\mern_stack\\server\\client\\src\\reducers\\userReducer.js":"12"},{"size":500,"mtime":1607599924883,"results":"13","hashOfConfig":"14"},{"size":1873,"mtime":1608395188314,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":1427,"mtime":1608395946055,"results":"17","hashOfConfig":"14"},{"size":9324,"mtime":1608511604313,"results":"18","hashOfConfig":"14"},{"size":6157,"mtime":1608514194861,"results":"19","hashOfConfig":"14"},{"size":3937,"mtime":1608500841455,"results":"20","hashOfConfig":"14"},{"size":2440,"mtime":1607598494764,"results":"21","hashOfConfig":"14"},{"size":3088,"mtime":1607548202209,"results":"22","hashOfConfig":"14"},{"size":6666,"mtime":1608498598401,"results":"23","hashOfConfig":"14"},{"size":7571,"mtime":1608500506203,"results":"24","hashOfConfig":"14"},{"size":538,"mtime":1608506118170,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1aahj4d",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"28"},"F:\\mern_stack\\server\\client\\src\\index.js",[],["61","62"],"F:\\mern_stack\\server\\client\\src\\App.js",["63","64"],"import React,{useEffect,createContext,useReducer,useContext} from 'react';\nimport NavBar from './components/Navbar'\nimport './App.css'\nimport {BrowserRouter,Route,Switch,useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/Signin'\nimport Profile from './components/screens/Profile'\nimport Signup from './components/screens/Signup'\nimport CreatePost from './components/screens/CreatePost'\nimport UserProfile from './components/screens/UserProfile'\nimport FollowingUserPosts from './components/screens/FollowingUserPosts'\nimport {reducer,initialState} from './reducers/userReducer'\nexport const UserContext = createContext()\n\nconst Routing = ()=>{\n  const history = useHistory()\n  const {state,dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    // console.log(typeof(user),user)\n    if(user){\n      dispatch({type:\"USER\",payload:user})\n      // history.push('/')\n    }else{\n      history.push('/signin')\n    }\n  },[])\n  return(\n    <Switch>\n      <Route exact path =  \"/\">\n        <Home />\n      </Route>\n      <Route path =  \"/signin\">\n        <Signin />\n      </Route>\n      <Route path =  \"/signup\">\n        <Signup />\n      </Route>\n      <Route exact path =  \"/profile\">\n        <Profile />\n      </Route>\n      <Route path =  \"/create\">\n        <CreatePost />\n      </Route>\n      <Route path =  \"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path =  \"/myfollowingpost\">\n        <FollowingUserPosts />\n      </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState)\n  return (\n    <UserContext.Provider value={{state,dispatch}}>\n    <BrowserRouter>\n      <NavBar />\n      <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","F:\\mern_stack\\server\\client\\src\\reportWebVitals.js",[],"F:\\mern_stack\\server\\client\\src\\components\\Navbar.js",[],"F:\\mern_stack\\server\\client\\src\\components\\screens\\Home.js",["65","66","67","68","69","70"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch(\"/allpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId, //postId:postId\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n    //homework\r\n    // const deleteComment = (postid)=>{\r\n    //     fetch(`/deletecomment/${postid}`,{\r\n    //         method:\"delete\",\r\n    //         headers:{\r\n    //             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    //         }\r\n    //     }).then(res=>res.json())\r\n    //     .then(result=>{\r\n    //         console.log(result)\r\n    //         const newData = data.filter(item=>{\r\n    //             return item._id !== result._id\r\n    //         })\r\n    //         setData(newData)\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <div>\r\n                                {/* <img style={{ width: \"25px\", height: \"25px\", borderRadius: \"50px\", float:\"left\"}}\r\n                                    src={state ? state.pic : \"loading\"}\r\n                                    src={item.postedBy.pic}\r\n                                /> */}\r\n                                <h6 style={{ padding: \"6px\" }}>\r\n                                    <Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id : \"/profile\"} >{item.postedBy.name}</Link>\r\n                                    {item.postedBy._id == state._id && <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                                        onClick={() => { deletePost(item._id) }}\r\n                                    >delete</i>}\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                                {item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { unlikePost(item._id) }}\r\n                                    >thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { likePost(item._id) }}\r\n                                    >thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{ fontWeight: \"500\" }}>{record.postedBy.name}</span> {record.text}\r\n                                                <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                                                // onClick={ () => { deletePost(item._id)}}\r\n                                                >more_vert</i>\r\n                                            </h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n            {/* <div className=\"card home-card\">\r\n                <h6>Uththara Himansi</h6>\r\n                <div className=\"card-amage\">\r\n                    <img src=\"https://images.unsplash.com/photo-1519681393784-d120267933ba?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NDF8fHdhbGxwYXBlcnxlbnwwfDB8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                    <h6>Snow Mountain Under Stars</h6>\r\n                    <p>A star is an astronomical object consisting of a luminous spheroid of plasma held together by its own gravity. The nearest star to Earth is the Sun.</p>\r\n                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card home-card\">\r\n                <h6>Shehan Sandeepa</h6>\r\n                <div className=\"card-amage\">\r\n                    <img src=\"https://images.unsplash.com/photo-1473654729523-203e25dfda10?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NDJ8fHdhbGxwYXBlcnxlbnwwfDB8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                    <h6>Glacier Near Body of Water</h6>\r\n                    <p>A glacier is a persistent body of dense ice that is constantly moving under its own weight. A glacier forms where the accumulation of snow exceeds its ablation over many years, often centuries.</p>\r\n                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","F:\\mern_stack\\server\\client\\src\\components\\screens\\Profile.js",["71","72","73"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../App'\r\n\r\nconst Profile = () => {\r\n    const [mypics, setPics] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n    // console.log(state)\r\n    useEffect(() => {\r\n        fetch('/mypost', {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setPics(result.mypost)\r\n            })\r\n    }, []) //empty dependancy array\r\n\r\n    useEffect(() => {\r\n        if (image) {\r\n            const data = new FormData()\r\n            data.append(\"file\", image)\r\n            data.append(\"upload_preset\", \"instagram-clone\")\r\n            data.append(\"cloud_name\", \"db957qd0z\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/db957qd0z/image/upload\", {\r\n                method: \"post\",\r\n                body: data\r\n            }).then(res => res.json())\r\n            .then(data => {\r\n                    setUrl(data.url)\r\n                    // console.log(data)\r\n                    // localStorage.setItem(\"user\",JSON.stringify({...state,pic:data.url}))\r\n                    // dispatch({type:\"UPDATEPIC\",payload:data.url})\r\n                    fetch('/updatepic',{\r\n                        method:\"put\",\r\n                        headers:{\r\n                            \"Content-Type\":\"application/json\",\r\n                            \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                        },\r\n                        body: JSON.stringify({\r\n                            pic:data.url    //data.url\r\n                        })\r\n                    }).then(res=>res.json())\r\n                    .then(result=>{\r\n                        console.log(result)\r\n                        localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))  //result.pic\r\n                        dispatch({type:\"UPDATEPIC\",payload:result.pic}) //result.pic\r\n                        // window.location.reload()\r\n                    })\r\n                    // window.location.reload()\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }, [image])\r\n\r\n    const updatePhoto = (file) => {\r\n        setImage(file)\r\n    }\r\n\r\n    return (\r\n        <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n            <div style={{\r\n                margin: \"18px 0px\",\r\n                borderBottom: \"1px solid grey\"\r\n            }}>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-around\",\r\n                }}>\r\n                    <div>\r\n                        <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                            src={state ? state.pic : \"loading\"}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h4>{state ? state.name : \"loading\"}</h4>\r\n                        <h6>{state ? state.email : \"loading\"}</h6>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                            <h6>{mypics.length} Posts</h6>\r\n                            <h6>{state ? state.followers.length : \"0\"} Followers</h6>\r\n                            <h6>{state ? state.following.length : \"0\"} Following</h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" \r\n                style={{margin: \"10px 0px 10px 48px\"}}\r\n                onClick={()=>{\r\n                    updatePhoto()\r\n                }}\r\n                >Update Profile\r\n            </button> */}\r\n                <div className=\"file-field input-field\" style={{ margin: \"10px\" }}>\r\n                    <div className=\"btn #64b5f6 blue darken-1\">\r\n                        <span>Update Profile</span>\r\n                        <input type=\"file\" onChange={(e) => updatePhoto(e.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"gallery\">\r\n                {\r\n                    mypics.map(item => {\r\n                        return (\r\n                            <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                        )\r\n                    })\r\n                }\r\n                {/* <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" /> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","F:\\mern_stack\\server\\client\\src\\components\\screens\\Signup.js",["74","75","76"],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n    useEffect(()=>{\r\n        if(url){\r\n            UploadFields()                \r\n        }\r\n    },[url])\r\n\r\n    const UploadProImg = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagram-clone\")\r\n        data.append(\"cloud_name\",\"db957qd0z\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/db957qd0z/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const UploadFields = ()=>{\r\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\r\n            M.toast({ html: \"Invalid email\", classes: \"#c62828 red darken-3\" })\r\n            return\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                email,\r\n                password,\r\n                pic:url\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#43a047 green darken-1\" })\r\n                    history.push('/signin')\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const PostData = () => {\r\n        if(image){\r\n            UploadProImg()\r\n        }else{\r\n            UploadFields()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <div className=\"file-field input-field\">\r\n                    <div className=\"btn #64b5f6 blue darken-1\">\r\n                        <span>Upload Profile Image</span>\r\n                        <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                    </div>\r\n                    <div className=\"file-path-wrapper\">\r\n                        <input className=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={() => PostData()}>SignUp</button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","F:\\mern_stack\\server\\client\\src\\components\\screens\\Signin.js",["77","78","79"],"import React,{useState,useContext} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\n\r\nconst Signin = () => {\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            M.toast({html: \"Invalid email\",classes:\"#c62828 red darken-3\"})\r\n            return\r\n        }\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n            if(data.error){\r\n                M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n            }\r\n            else{\r\n                localStorage.setItem(\"jwt\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html: \"Signed in Succesfully\",classes:\"#43a047 green darken-1\"})\r\n                history.push('/')\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2>Instagram</h2>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"email\" \r\n                value={email}\r\n                onChange={(e)=>setEmail(e.target.value)}\r\n                />\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"password\" \r\n                value={password}\r\n                onChange={(e)=>setPassword(e.target.value)}\r\n                />\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>Login</button>\r\n                <h5>\r\n                    <Link to=\"/signup\">Don't have an account ?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","F:\\mern_stack\\server\\client\\src\\components\\screens\\CreatePost.js",["80"],"import React,{useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst CreatePost = ()=>{\r\n    const history = useHistory()\r\n    const [title,setTitle]  = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            //network request to server\r\n            fetch(\"/createpost\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n                console.log(data)\r\n                if(data.error){\r\n                    M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n                }\r\n                else{\r\n                    M.toast({html: \"Create Post Succesfully\",classes:\"#43a047 green darken-1\"})\r\n                    history.push('/')\r\n                }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    },[url])\r\n\r\n    const postDetails = ()=>{\r\n        //network request to cloudinary\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"instagram-clone\")\r\n        data.append(\"cloud_name\",\"db957qd0z\")\r\n        fetch(\"\thttps://api.cloudinary.com/v1_1/db957qd0z/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return(\r\n        <div className=\"card input-field\"\r\n        style={{\r\n            margin:\"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign:\"center\"\r\n        }}\r\n        >\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(e)=>setTitle(e.target.value)}\r\n            />\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"body\" \r\n            value={body}\r\n            onChange={(e)=>setBody(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Upload Image</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n                </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>postDetails()} >Submit Post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","F:\\mern_stack\\server\\client\\src\\components\\screens\\UserProfile.js",["81","82","83"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const [userProfile, setProfile] = useState(null)\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const { userid } = useParams()\r\n    console.log(userid)\r\n    const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setProfile(result)\r\n            })\r\n    }, []) //empty dependancy array\r\n\r\n    const followUser = () => {\r\n        fetch('/follow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                followId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                setProfile((prevState) => {\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers: [...prevState.user.followers, data._id]\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(false)\r\n            })\r\n    }\r\n\r\n    const unfollowUser = () => {\r\n        fetch('/unfollow', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                unfollowId: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                // console.log(data)\r\n                dispatch({ type: \"UPDATE\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                setProfile((prevState) => {\r\n                    const newfollower = prevState.user.followers.filter(item=> item != data._id)\r\n                    return {\r\n                        ...prevState,\r\n                        user: {\r\n                            ...prevState.user,\r\n                            followers:newfollower\r\n                        }\r\n                    }\r\n                })\r\n                setShowFollow(true)\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            {userProfile ?\r\n\r\n                <div style={{ maxWidth: \"550px\", margin: \"0px auto\" }}>\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        margin: \"18px 0px\",\r\n                        borderBottom: \"1px solid grey\"\r\n                    }}>\r\n                        <div>\r\n                            <img style={{ width: \"160px\", height: \"160px\", borderRadius: \"80px\" }}\r\n                                src={userProfile.user.pic}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <h4>{userProfile.user.name}</h4>\r\n                            <h6>{userProfile.user.email}</h6>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"108%\" }}>\r\n                                <h6>{userProfile.posts.length} Posts</h6>\r\n                                <h6>{userProfile.user.followers.length} Followers</h6>\r\n                                <h6>{userProfile.user.following.length} Following</h6>\r\n                            </div>\r\n                            {showfollow \r\n                                ?\r\n                                <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                                    onClick={() => followUser()}>Follow\r\n                                </button>\r\n                                :\r\n                                <button style={{margin:\"10px\"}} className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                                    onClick={() => unfollowUser()}>UnFollow\r\n                                </button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"gallery\">\r\n                        {\r\n                            userProfile.posts.map(item => {\r\n                                return (\r\n                                    <img key={item._id} className=\"item\" src={item.photo} alt={item.title} />\r\n                                )\r\n                            })\r\n                        }\r\n                        {/* <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" />\r\n                <img className=\"item\" src=\"https://images.unsplash.com/photo-1552607676-17f088307dce?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NTB8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\" /> */}\r\n                    </div>\r\n                </div>\r\n\r\n                : <h2>loading...!</h2>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","F:\\mern_stack\\server\\client\\src\\components\\screens\\FollowingUserPosts.js",["84","85","86","87","88","89"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const [data, setData] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch(\"/followingpost\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                setData(result.posts)\r\n            })\r\n    }, [])\r\n\r\n    const likePost = (id) => {\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                // console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                postId, //postId:postId\r\n                text\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.map(item => {\r\n                    if (item._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return item\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletepost/${postid}`, {\r\n            method: \"delete\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                console.log(result)\r\n                const newData = data.filter(item => {\r\n                    return item._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n    //homework\r\n    // const deleteComment = (postid)=>{\r\n    //     fetch(`/deletecomment/${postid}`,{\r\n    //         method:\"delete\",\r\n    //         headers:{\r\n    //             \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    //         }\r\n    //     }).then(res=>res.json())\r\n    //     .then(result=>{\r\n    //         console.log(result)\r\n    //         const newData = data.filter(item=>{\r\n    //             return item._id !== result._id\r\n    //         })\r\n    //         setData(newData)\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {\r\n                data.map(item => {\r\n                    return (\r\n                        <div className=\"card home-card\" key={item._id}>\r\n                            <div>\r\n                                {/* <img style={{ width: \"25px\", height: \"25px\", borderRadius: \"50px\", float:\"left\"}}\r\n                                    src={state ? state.pic : \"loading\"}\r\n                                    src={item.postedBy.pic}\r\n                                /> */}\r\n                                <h6 style={{padding:\"6px\"}}>\r\n                                    <Link to={item.postedBy._id !== state._id ? \"/profile/\"+item.postedBy._id : \"/profile\"} >{item.postedBy.name}</Link>\r\n                                    {item.postedBy._id == state._id && <i className=\"material-icons\" style={{ float: \"right\" }}\r\n                                        onClick={() => { deletePost(item._id) }}\r\n                                    >delete</i>}\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <i className=\"material-icons\" style={{ color: \"red\" }}>favorite</i>\r\n                                {item.likes.includes(state._id)\r\n                                    ?\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { unlikePost(item._id) }}\r\n                                    >thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\"\r\n                                        onClick={() => { likePost(item._id) }}\r\n                                    >thumb_up</i>\r\n                                }\r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record => {\r\n                                        return (\r\n                                            <h6 key={record._id}><span style={{ fontWeight: \"500\" }}>{record.postedBy.name}</span> {record.text}\r\n                                                <i className=\"material-icons\" style={{float:\"right\"}}\r\n                                                    // onClick={ () => { deletePost(item._id)}}\r\n                                                >more_vert</i>\r\n                                            </h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e) => {\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value, item._id)\r\n                                }}>\r\n                                    <input type=\"text\" placeholder=\"add a comment\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home",["90","91"],"F:\\mern_stack\\server\\client\\src\\reducers\\userReducer.js",["92","93","94","95"],"export const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type==\"USER\"){\r\n        return action.payload\r\n    }\r\n    if(action.type==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type==\"UPDATE\"){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type==\"UPDATEPIC\"){\r\n        return {\r\n            ...state,\r\n            pic:action.payload\r\n        }\r\n    }\r\n    return state\r\n}",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":17,"column":10,"nodeType":"102","messageId":"103","endLine":17,"endColumn":15},{"ruleId":"104","severity":1,"message":"105","line":27,"column":5,"nodeType":"106","endLine":27,"endColumn":7,"suggestions":"107"},{"ruleId":"100","severity":1,"message":"108","line":7,"column":20,"nodeType":"102","messageId":"103","endLine":7,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":34,"column":34,"nodeType":"111","messageId":"112","endLine":34,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":60,"column":34,"nodeType":"111","messageId":"112","endLine":60,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":87,"column":34,"nodeType":"111","messageId":"112","endLine":87,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":145,"column":56,"nodeType":"111","messageId":"112","endLine":145,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":151,"column":33,"nodeType":"115","endLine":151,"endColumn":57},{"ruleId":"100","severity":1,"message":"116","line":8,"column":12,"nodeType":"102","messageId":"103","endLine":8,"endColumn":15},{"ruleId":"104","severity":1,"message":"117","line":59,"column":8,"nodeType":"106","endLine":59,"endColumn":15,"suggestions":"118"},{"ruleId":"113","severity":1,"message":"114","line":76,"column":25,"nodeType":"115","endLine":78,"endColumn":27},{"ruleId":"104","severity":1,"message":"119","line":16,"column":7,"nodeType":"106","endLine":16,"endColumn":12,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":37,"column":24,"nodeType":"123","messageId":"124","endLine":37,"endColumn":25,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"122","line":37,"column":49,"nodeType":"123","messageId":"124","endLine":37,"endColumn":50,"suggestions":"126"},{"ruleId":"100","severity":1,"message":"101","line":7,"column":12,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":12,"column":23,"nodeType":"123","messageId":"124","endLine":12,"endColumn":24,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"122","line":12,"column":48,"nodeType":"123","messageId":"124","endLine":12,"endColumn":49,"suggestions":"128"},{"ruleId":"104","severity":1,"message":"129","line":40,"column":7,"nodeType":"106","endLine":40,"endColumn":12,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"131","line":21,"column":8,"nodeType":"106","endLine":21,"endColumn":10,"suggestions":"132"},{"ruleId":"109","severity":1,"message":"133","line":67,"column":85,"nodeType":"111","messageId":"112","endLine":67,"endColumn":87},{"ruleId":"113","severity":1,"message":"114","line":91,"column":29,"nodeType":"115","endLine":93,"endColumn":31},{"ruleId":"100","severity":1,"message":"108","line":7,"column":20,"nodeType":"102","messageId":"103","endLine":7,"endColumn":28},{"ruleId":"109","severity":1,"message":"110","line":34,"column":34,"nodeType":"111","messageId":"112","endLine":34,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":60,"column":34,"nodeType":"111","messageId":"112","endLine":60,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":87,"column":34,"nodeType":"111","messageId":"112","endLine":87,"endColumn":36},{"ruleId":"109","severity":1,"message":"110","line":145,"column":56,"nodeType":"111","messageId":"112","endLine":145,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":151,"column":33,"nodeType":"115","endLine":151,"endColumn":57},{"ruleId":"96","replacedBy":"134"},{"ruleId":"98","replacedBy":"135"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":19,"nodeType":"111","messageId":"112","endLine":4,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":7,"column":19,"nodeType":"111","messageId":"112","endLine":7,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":10,"column":19,"nodeType":"111","messageId":"112","endLine":10,"endColumn":21},{"ruleId":"109","severity":1,"message":"110","line":17,"column":19,"nodeType":"111","messageId":"112","endLine":17,"endColumn":21},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["138"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'UploadFields'. Either include it or remove the dependency array.",["140"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["141","142"],["143","144"],["145","146"],["147","148"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["150"],"Expected '!==' and instead saw '!='.",["136"],["137"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"160","fix":"164","desc":"162"},{"messageId":"157","fix":"165","desc":"159"},{"messageId":"160","fix":"166","desc":"162"},{"messageId":"157","fix":"167","desc":"159"},{"messageId":"160","fix":"168","desc":"162"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [dispatch, history]",{"range":"173","text":"174"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"175","text":"176"},"Update the dependencies array to be: [UploadFields, url]",{"range":"177","text":"178"},"removeEscape",{"range":"179","text":"180"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"181","text":"182"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"183","text":"180"},{"range":"184","text":"182"},{"range":"185","text":"180"},{"range":"186","text":"182"},{"range":"187","text":"180"},{"range":"188","text":"182"},"Update the dependencies array to be: [body, history, title, url]",{"range":"189","text":"190"},"Update the dependencies array to be: [userid]",{"range":"191","text":"192"},[1046,1048],"[dispatch, history]",[2400,2407],"[dispatch, image, state]",[525,530],"[UploadFields, url]",[1106,1107],"",[1106,1106],"\\",[1131,1132],[1131,1131],[427,428],[427,427],[452,453],[452,452],[1331,1336],"[body, history, title, url]",[781,783],"[userid]"]